{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","text","handleInputText","target","getGifs","name","a","url","encodeURI","fetch","res","json","info","gifs","data","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","i","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,EAhCM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEFC,mBAAS,IAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAiBtC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC9BC,QAAQC,IAAIL,GACZL,GAAe,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACtCR,EAAc,MAKd,SACI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SAAW,SAAAC,GAAI,OAlBH,SAACA,GACrBZ,EAAcY,GAiBaC,CAAgBD,EAAKE,OAAOJ,a,+BCzBlDK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIAA,EAAIC,OAJJ,cAIbC,EAJa,OAMbC,EAAOD,EAAKE,KAAKC,KAAI,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAVvB,kBAcZM,GAdY,2CAAH,sDCEPQ,EAAc,SAAC,GAAiB,IAAhBd,EAAe,EAAfA,IAAIW,EAAW,EAAXA,MAC7B,OACI,sBAAKI,UAAU,wDAAf,UACI,qBAAKC,IAAKhB,EAAMiB,IAAKN,IACrB,4BAAIA,QCmCDO,EAnCU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,ECHb,SAACA,GAAc,IAAD,EACZvC,mBAAS,CAC/B2B,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBtC,OAjBAC,qBAAY,WAERC,YAAW,WACP3B,EAAQsB,GACHM,MAAK,SAAAC,GACFJ,EAAS,CACLf,KAAMmB,EACNN,SAAS,SAGtB,OAEJ,CAACD,IAKGE,EDhBkBM,CAAaR,GAA9BZ,EAJ6B,EAI7BA,KAAMa,EAJuB,EAIvBA,QAQd,OAEI,qCACI,mCAAOD,EAAP,OACCC,GAAW,mBAAGL,UAAU,oCAAb,sBACZ,qBAAKA,UAAU,YAAf,SAEYR,EAAKC,KAAI,SAAAC,GACL,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEK9BkB,EA7BM,WAAO,IAAD,EAGahD,mBAAS,CAAC,oBAHvB,mBAGhBiD,EAHgB,KAGJC,EAHI,KAavB,OACI,qCACI,8CACA,cAAC,EAAD,CAAanD,cAAgBmD,IAC7B,uBAEA,6BAEID,EAAWrB,KAAI,SAACW,EAAUY,GAAX,OAAiB,cAAC,EAAD,CAAwBZ,SAAYA,GAAtBA,Y,MClB9Da,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.3e2f0c55.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\n const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputText = (text) => {\n        setInputValue(text)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(inputValue.trim().length < 2) return;\n        console.log(e);\n        setCategories( cats => [inputValue,...cats])\n        setInputValue('')\n    }\n\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange= {text => handleInputText(text.target.value)}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async (name) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(name)}&limit=10&api_key=OluWZCL4VojkRrPG7yYLg6REXq5Ne8kR`\n\n    const res =  await fetch(url)\n    const info = await res.json()\n    \n    const gifs = info.data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({url,title}) => {\n    return (\n        <div className=\"card animate__pulse animate__bounce animate__delay-1s\">\n            <img src={url}  alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from './helpers/getGifs';\n\n\nexport const GifGrid =   ({category}) => {\n\n    // const [images, setImages] = useState([])\n\n    const { data, loading} = useFetchGifs(category);\n    // useEffect(  ()=> {\n    //      getGifs(category)\n    //         .then(setImages)\n    // }, [category])\n\n  \n\n    return (\n            \n        <>\n            <h3> { category } </h3>\n            {loading && <p className=\"animate__animated animate__flash \">Cargando</p> }\n            <div className=\"card-grid\">\n                    {\n                        data.map(img => {\n                            return  (\n                                <GifGridItem \n                                    key={img.id}\n                                    {...img}\n                                />\n\n                            )\n                        })\n                    }\n            </div>\n        </>\n    )\n}\n\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(  ()=> {\n\n        setTimeout(() => {\n            getGifs(category)\n                .then(imgs => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                })\n        }, 3000)\n\n    }, [category])\n\n\n\n    \n    return state;\n\n}","import React, { useState } from 'react';\nimport  AddCategory  from './components/AddCategory';\nimport GifGrid  from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n\n    const [categories, setcategories] = useState(['Hunter x Hunter'])\n\n\n    // const handleAdd = () => {\n    //     // categories.push([)\n    //     // setcategories([...categories, 'Sakura card captor'])\n    //     setcategories(cats => [...cats, 'Sakura card captor'])\n\n    // }\n\n    return ( \n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setcategories} />\n            <hr/>\n\n            <ol>\n            {\n                categories.map((category, i) => <GifGrid key={category} category = {category}/>)\n            }\n            </ol>\n        </>\n    )\n\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(<GifExpertApp />,  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}